
Hussam Arshad | Analysing Handwritten Digits Using Keras and Tensorflow Â¶
In [0]:
import keras
from keras import models
from keras import layers
from keras.datasets import mnist
from keras.utils import to_categorical


(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
In [63]:
train_images.shape
Out[63]:
(60000, 28, 28)
In [0]:
model = models.Sequential()
model.add(layers.Dense(512, activation='relu', input_shape=(28 * 28,)))
model.add(layers.Dense(10, activation='softmax'))
In [0]:
model.compile(optimizer='rmsprop',
                loss='categorical_crossentropy',
                metrics=['accuracy'])
In [0]:
train_images = train_images.reshape((60000, 28 * 28))
train_images = train_images.astype('float32') / 255

test_images = test_images.reshape((10000, 28 * 28))
test_images = test_images.astype('float32') / 255
In [0]:
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)
In [68]:
model.fit(train_images, train_labels, epochs=5, batch_size=128)
Epoch 1/5
60000/60000 [==============================] - 5s 91us/step - loss: 0.2578 - acc: 0.9256
Epoch 2/5
60000/60000 [==============================] - 5s 85us/step - loss: 0.1042 - acc: 0.9690
Epoch 3/5
60000/60000 [==============================] - 5s 87us/step - loss: 0.0690 - acc: 0.9796
Epoch 4/5
60000/60000 [==============================] - 5s 87us/step - loss: 0.0491 - acc: 0.9855
Epoch 5/5
60000/60000 [==============================] - 5s 85us/step - loss: 0.0370 - acc: 0.9887
Out[68]:
<keras.callbacks.History at 0x7f2d2246d630>
In [69]:
test_loss, test_acc = model.evaluate(test_images, test_labels)
10000/10000 [==============================] - 1s 64us/step
In [70]:
print ('Test Accuracy: ', test_acc)
Test Accuracy:  0.9804
